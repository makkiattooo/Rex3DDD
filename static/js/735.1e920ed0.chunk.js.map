{"version":3,"file":"static/js/735.1e920ed0.chunk.js","mappings":"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","sources":["components/SkeletonCard.js","pages/ProductsPage.js"],"sourcesContent":["import React from 'react';\n\nconst SkeletonCard = () => {\n    return (\n        <div className=\"col-md-4 mb-4\">\n            <div className=\"card h-100 skeleton-card\">\n                <div className=\"skeleton-image\"></div>\n                <div className=\"card-body\">\n                    <div className=\"skeleton-text skeleton-title\"></div>\n                    <div className=\"skeleton-text skeleton-line-1\"></div>\n                    <div className=\"skeleton-text skeleton-line-2\"></div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SkeletonCard;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport SkeletonCard from '../components/SkeletonCard';\n\n// --- Helper Functions ---\nconst getPriceValue = (priceString) => {\n    if (!priceString) return 0;\n    const price = parseFloat(String(priceString).replace(',', '.').replace(' zł', ''));\n    return isNaN(price) ? 0 : price;\n};\n\nconst getLowestPrice = (product) => {\n    if (!product || !product.heightOptions || product.heightOptions.length === 0) return 0;\n    const prices = product.heightOptions.map(opt => getPriceValue(opt.promoPrice || opt.price));\n    return Math.min(...prices);\n};\n\nconst getCheapestOption = (product) => {\n    if (!product || !product.heightOptions || product.heightOptions.length === 0) return null;\n    \n    return product.heightOptions.reduce((cheapest, current) => {\n        const cheapestPrice = getPriceValue(cheapest.promoPrice || cheapest.price);\n        const currentPrice = getPriceValue(current.promoPrice || current.price);\n        return currentPrice < cheapestPrice ? current : cheapest;\n    });\n};\n\nconst hasPromotion = (product) => {\n    if (!product || !product.heightOptions) return false;\n    return product.heightOptions.some(opt => opt.promoPrice);\n};\n\nconst getUniqueValues = (products, key) => {\n    const allValues = products.flatMap(p => p[key] || []);\n    return ['all', ...Array.from(new Set(allValues))];\n};\n\nconst colorMap = {\n    \"Biały\": \"#FFFFFF\",\n    \"Zielony\": \"#28a745\",\n    \"Żółty\": \"#ffc107\",\n    \"Czarny\": \"#000000\",\n    \"Szary\": \"#6c757d\",\n    \"Jasny brąz\": \"#D2B48C\",\n    \"Niebieski\": \"#007bff\",\n    \"Czerwony\": \"#dc3545\",\n    \"Jasny Brąz\": \"#D2B48C\",\n};\n\n// --- Component --- \nfunction ProductsPage() {\n    // --- State --- \n    const [products, setProducts] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [filters, setFilters] = useState({ category: 'all', color: 'all', promotion: false, isNew: false });\n    const [sortOrder, setSortOrder] = useState('default');\n    const [priceRange, setPriceRange] = useState([0, 100]);\n    const [minMaxPrice, setMinMaxPrice] = useState([0, 100]);\n    const [modalProduct, setModalProduct] = useState(null);\n\n    // --- Data Loading and Initial Setup ---\n    useEffect(() => {\n        setIsLoading(true);\n        fetch('/products.json')\n            .then(response => response.json())\n            .then(data => {\n                setProducts(data);\n                const allPrices = data.flatMap(p => p.heightOptions.map(opt => getLowestPrice(p)));\n                const minPrice = Math.min(...allPrices, Infinity);\n                const maxPrice = Math.max(...allPrices, 0);\n                const finalMaxPrice = maxPrice === 0 ? 100 : maxPrice;\n                setMinMaxPrice([minPrice, finalMaxPrice]);\n                setPriceRange([minPrice, finalMaxPrice]);\n                setIsLoading(false);\n            })\n            .catch(error => {\n                console.error('Error fetching products:', error);\n                setIsLoading(false);\n            });\n    }, []);\n\n    // --- Modal Body Scroll Lock ---\n    useEffect(() => {\n        if (modalProduct) {\n            document.body.style.overflow = 'hidden';\n        } else {\n            document.body.style.overflow = 'auto';\n        }\n        return () => document.body.style.overflow = 'auto';\n    }, [modalProduct]);\n\n    // --- Handlers ---\n    const handleFilterChange = (e) => {\n        const { name, value, type, checked } = e.target;\n        setFilters(prev => ({ ...prev, [name]: type === 'checkbox' ? checked : value }));\n    };\n\n    const handlePriceInputChange = (index, value) => {\n        const newPriceRange = [...priceRange];\n        newPriceRange[index] = value; \n        setPriceRange(newPriceRange);\n    };\n\n    const handlePriceInputBlur = () => {\n        let [min, max] = priceRange.map(v => v === '' ? -1 : parseFloat(v));\n        if (min === -1) min = minMaxPrice[0];\n        if (max === -1) max = minMaxPrice[1];\n        setPriceRange(min > max ? [max, min] : [min, max]);\n    };\n    \n    const clearFilters = () => {\n        setSearchTerm('');\n        setFilters({ category: 'all', color: 'all', promotion: false, isNew: false });\n        setSortOrder('default');\n        setPriceRange(minMaxPrice);\n    };\n\n    // --- Memoized Filtering and Sorting --- \n    const filteredAndSortedProducts = useMemo(() => {\n        if (isLoading) return [];\n        const [min, max] = priceRange.map(parseFloat);\n        return products\n            .filter(product => {\n                const matchesCategory = filters.category === 'all' || product.category === filters.category;\n                const matchesColor = filters.color === 'all' || product.colorOptions.includes(filters.color);\n                const matchesSearch = searchTerm === '' || product.name.toLowerCase().includes(searchTerm.toLowerCase());\n                const productPrice = getLowestPrice(product);\n                const matchesPrice = productPrice >= min && productPrice <= max;\n                const matchesPromotion = !filters.promotion || (filters.promotion && hasPromotion(product));\n                const matchesNew = !filters.isNew || (filters.isNew && product.isNew);\n                return matchesCategory && matchesColor && matchesSearch && matchesPrice && matchesPromotion && matchesNew;\n            })\n            .sort((a, b) => {\n                const priceA = getLowestPrice(a);\n                const priceB = getLowestPrice(b);\n                switch (sortOrder) {\n                    case 'price-asc': return priceA - priceB;\n                    case 'price-desc': return priceB - priceA;\n                    case 'name-asc': return a.name.localeCompare(b.name);\n                    case 'name-desc': return b.name.localeCompare(a.name);\n                    default: return 0;\n                }\n            });\n    }, [searchTerm, filters, sortOrder, priceRange, products, isLoading]);\n\n    const uniqueCategories = useMemo(() => getUniqueValues(products, 'category'), [products]);\n    const uniqueColors = useMemo(() => getUniqueValues(products, 'colorOptions'), [products]);\n\n    const FiltersPanel = () => (\n        <div className=\"d-flex flex-column h-100\">\n            <div className=\"flex-grow-1\">\n                <div className=\"mb-3\">\n                    <label htmlFor=\"search\" className=\"form-label fw-bold\">Szukaj</label>\n                    <input type=\"text\" id=\"search\" className=\"form-control\" placeholder=\"Nazwa produktu...\" value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)} />\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"sortOrder\" className=\"form-label fw-bold\">Sortuj</label>\n                    <select id=\"sortOrder\" className=\"form-select\" value={sortOrder} onChange={(e) => setSortOrder(e.target.value)}>\n                        <option value=\"default\">Domyślnie</option>\n                        <option value=\"price-asc\">Cena: Rosnąco</option>\n                        <option value=\"price-desc\">Cena: Malejąco</option>\n                        <option value=\"name-asc\">Nazwa (A-Z)</option>\n                        <option value=\"name-desc\">Nazwa (Z-A)</option>\n                    </select>\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"category\" className=\"form-label fw-bold\">Kategoria</label>\n                    <select id=\"category\" name=\"category\" className=\"form-select\" value={filters.category} onChange={handleFilterChange}>\n                        {uniqueCategories.map(cat => <option key={cat} value={cat}>{cat === 'all' ? 'Wszystkie' : cat}</option>)}\n                    </select>\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"color\" className=\"form-label fw-bold\">Kolor</label>\n                    <select id=\"color\" name=\"color\" className=\"form-select\" value={filters.color} onChange={handleFilterChange}>\n                        {uniqueColors.map(col => <option key={col} value={col}>{col === 'all' ? 'Wszystkie' : col}</option>)}\n                    </select>\n                </div>\n                <div className=\"mb-3\">\n                    <label className=\"form-label fw-bold\">Cena</label>\n                    <div className=\"d-flex align-items-center\">\n                        <input type=\"number\" className=\"form-control\" value={priceRange[0]} onChange={(e) => handlePriceInputChange(0, e.target.value)} onBlur={handlePriceInputBlur} placeholder=\"Min\" />\n                        <span className=\"mx-2\">-</span>\n                        <input type=\"number\" className=\"form-control\" value={priceRange[1]} onChange={(e) => handlePriceInputChange(1, e.target.value)} onBlur={handlePriceInputBlur} placeholder=\"Max\" />\n                    </div>\n                </div>\n                <div className=\"mb-3\">\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"checkbox\" name=\"promotion\" id=\"filterPromotion\" checked={filters.promotion} onChange={handleFilterChange} />\n                        <label className=\"form-check-label\" htmlFor=\"filterPromotion\">Pokaż promocje</label>\n                    </div>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"checkbox\" name=\"isNew\" id=\"filterNew\" checked={filters.isNew} onChange={handleFilterChange} />\n                        <label className=\"form-check-label\" htmlFor=\"filterNew\">Pokaż nowości</label>\n                    </div>\n                </div>\n            </div>\n            <div className=\"mt-auto\">\n                <button className=\"btn btn-primary w-100 mb-2\" data-bs-dismiss=\"offcanvas\">Pokaż produkty ({filteredAndSortedProducts.length})</button>\n                <button className=\"btn btn-outline-secondary w-100\" onClick={clearFilters}>Wyczyść wszystkie filtry</button>\n            </div>\n        </div>\n    );\n\n    const renderSkeletons = () => (\n        <div className=\"row\">\n            {Array.from({ length: 6 }).map((_, index) => (\n                <SkeletonCard key={index} />\n            ))}\n        </div>\n    );\n\n    return (\n        <>\n            <div className=\"offcanvas offcanvas-start\" tabIndex=\"-1\" id=\"filtersOffcanvas\" aria-labelledby=\"filtersOffcanvasLabel\">\n                <div className=\"offcanvas-header\">\n                    <h5 className=\"offcanvas-title\" id=\"filtersOffcanvasLabel\">Filtruj i Sortuj</h5>\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\n                </div>\n                <div className=\"offcanvas-body\">\n                    <FiltersPanel />\n                </div>\n            </div>\n\n            <div className=\"container mt-5 pt-5\">\n                <div className=\"text-center mb-4\">\n                    <h1 className=\"display-5\">Nasze Produkty</h1>\n                    <p className=\"lead text-muted\">Przeglądaj naszą kolekcję unikalnych wydruków 3D.</p>\n                </div>\n\n                <div className=\"d-flex justify-content-between align-items-center mb-4\">\n                    <button className=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#filtersOffcanvas\" aria-controls=\"filtersOffcanvas\">\n                        Filtry\n                    </button>\n                    {!isLoading && <span className=\"text-muted\">{filteredAndSortedProducts.length} z {products.length} produktów</span>}\n                </div>\n\n                {isLoading ? renderSkeletons() : (\n                    <div className=\"row\">\n                        {filteredAndSortedProducts.map(product => {\n                            const cheapestOption = getCheapestOption(product);\n                            const isPromo = hasPromotion(product);\n                            return (\n                                <div key={product.id} className=\"col-md-4 mb-4\">\n                                    <div className=\"card h-100 product-card\">\n                                        <div className=\"position-relative\">\n                                            <img src={product.mainImage} className=\"card-img-top product-card-img\" alt={product.name} />\n                                            <div className=\"position-absolute top-0 start-0 p-2\">\n                                                {product.isNew && <span className=\"badge bg-success me-1\">NOWOŚĆ</span>}\n                                                {isPromo && <span className=\"badge bg-danger me-1\">PROMOCJA</span>}\n                                                {product.isBestseller && <span className=\"badge bg-warning text-dark\">BESTSELLER</span>}\n                                            </div>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">{product.name}</h5>\n                                            {cheapestOption?.promoPrice ? (\n                                                <p className=\"card-text\">\n                                                    od <s className=\"text-muted me-1\">{cheapestOption.price}</s>\n                                                    <span className=\"text-danger fw-bold ms-1\">{cheapestOption.promoPrice}</span>\n                                                </p>\n                                            ) : (\n                                                <p className=\"card-text text-muted\">od {cheapestOption?.price}</p>\n                                            )}\n                                        </div>\n                                        <div className=\"card-footer bg-transparent border-top-0 pb-3\">\n                                            <button onClick={() => setModalProduct(product)} className=\"btn btn-sm btn-outline-secondary me-2\">Szybki podgląd</button>\n                                            <Link to={`/products/${product.id}`} className=\"btn btn-sm btn-primary\">Zobacz szczegóły</Link>\n                                        </div>\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n                )}\n\n                {modalProduct && (\n                    <>\n                        <div className=\"modal fade show\" style={{ display: 'block' }} tabIndex=\"-1\">\n                            <div className=\"modal-dialog modal-lg modal-dialog-centered\">\n                                <div className=\"modal-content\">\n                                    <div className=\"modal-header\">\n                                        <h5 className=\"modal-title\">{modalProduct.name}</h5>\n                                        <button type=\"button\" className=\"btn-close\" onClick={() => setModalProduct(null)}></button>\n                                    </div>\n                                    <div className=\"modal-body\">\n                                        <div className=\"row\">\n                                            <div className=\"col-md-6\">\n                                                <div className=\"position-relative\">\n                                                    <img src={modalProduct.mainImage} className=\"img-fluid rounded\" alt={modalProduct.name} />\n                                                    <div className=\"position-absolute top-0 start-0 p-2\">\n                                                        {modalProduct.isNew && <span className=\"badge bg-success me-1\">NOWOŚĆ</span>}\n                                                        {hasPromotion(modalProduct) && <span className=\"badge bg-danger me-1\">PROMOCJA</span>}\n                                                        {modalProduct.isBestseller && <span className=\"badge bg-warning text-dark\">BESTSELLER</span>}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"col-md-6\">\n                                                <p>{modalProduct.description}</p>\n                                                <h6>Opcje:</h6>\n                                                <ul>{modalProduct.heightOptions.map(opt => <li key={opt.label}>{opt.label} - <strong>{opt.promoPrice ? <><s className=\"text-muted me-2\">{opt.price}</s><span className=\"text-danger\">{opt.promoPrice}</span></> : opt.price}</strong></li>)}</ul>\n                                                <h6>Dostępne kolory:</h6>\n                                                <div className=\"d-flex flex-wrap mb-4\">\n                                                    {modalProduct.colorOptions.map(color => (\n                                                        <span \n                                                            key={color} \n                                                            className=\"color-swatch-detail me-2 mb-2\"\n                                                            style={{ backgroundColor: colorMap[color] || '#ccc' }} \n                                                            title={color}\n                                                        ></span>\n                                                    ))}\n                                                </div>\n                                                <Link to={`/products/${modalProduct.id}`} className=\"btn btn-primary mt-3\">Idź do strony produktu</Link>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"modal-backdrop fade show\" onClick={() => setModalProduct(null)}></div>\n                    </>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default ProductsPage;"],"names":["SkeletonCard","_jsx","className","children","_jsxs","getPriceValue","priceString","price","parseFloat","String","replace","isNaN","getLowestPrice","product","heightOptions","length","prices","map","opt","promoPrice","Math","min","hasPromotion","some","getUniqueValues","products","key","allValues","flatMap","p","Array","from","Set","colorMap","setProducts","useState","isLoading","setIsLoading","searchTerm","setSearchTerm","filters","setFilters","category","color","promotion","isNew","sortOrder","setSortOrder","priceRange","setPriceRange","minMaxPrice","setMinMaxPrice","modalProduct","setModalProduct","useEffect","fetch","then","response","json","data","allPrices","minPrice","Infinity","maxPrice","max","finalMaxPrice","catch","error","console","document","body","style","overflow","handleFilterChange","e","name","value","type","checked","target","prev","_objectSpread","handlePriceInputChange","index","newPriceRange","handlePriceInputBlur","v","clearFilters","filteredAndSortedProducts","useMemo","filter","matchesCategory","matchesColor","colorOptions","includes","matchesSearch","toLowerCase","productPrice","matchesPrice","matchesPromotion","matchesNew","sort","a","b","priceA","priceB","localeCompare","uniqueCategories","uniqueColors","FiltersPanel","htmlFor","id","placeholder","onChange","cat","col","onBlur","onClick","_Fragment","tabIndex","_","cheapestOption","reduce","cheapest","current","cheapestPrice","getCheapestOption","isPromo","src","mainImage","alt","isBestseller","Link","to","concat","display","description","label","backgroundColor","title"],"sourceRoot":""}