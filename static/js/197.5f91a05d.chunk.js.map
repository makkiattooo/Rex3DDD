{"version":3,"file":"static/js/197.5f91a05d.chunk.js","mappings":"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","sources":["components/AddOpinionForm.js","components/StarRating.js","pages/ProductDetail.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { supabase } from '../supabase';\n\nconst EditableStarRating = ({ rating, onRatingChange }) => {\n    const [hoverRating, setHoverRating] = useState(0);\n    const stars = Array.from({ length: 5 }, (_, i) => i + 1);\n\n    return (\n        <div>\n            {stars.map(starIndex => (\n                <span\n                    key={starIndex}\n                    className=\"star\"\n                    style={{ cursor: 'pointer', color: (starIndex <= (hoverRating || rating)) ? 'gold' : 'gray' }}\n                    onClick={() => onRatingChange(starIndex)}\n                    onMouseEnter={() => setHoverRating(starIndex)}\n                    onMouseLeave={() => setHoverRating(0)}\n                >\n                    ★\n                </span>\n            ))}\n        </div>\n    );\n};\n\nconst AddOpinionForm = ({ productSku, productName, onSubmitSuccess }) => {\n    const [newOpinion, setNewOpinion] = useState({ autor: '', komentarz: '', rating: 5, sku: productSku || '' });\n    const [status, setStatus] = useState({ isLoading: false, error: null });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setNewOpinion(prevState => ({ ...prevState, [name]: value }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!newOpinion.autor || !newOpinion.komentarz) {\n            setStatus({ isLoading: false, error: 'Wypełnij wszystkie pola.' });\n            return;\n        }\n\n        setStatus({ isLoading: true, error: null });\n\n        const opinionData = {\n            autor: newOpinion.autor,\n            komentarz: newOpinion.komentarz,\n            rating: parseInt(newOpinion.rating, 10),\n            product_sku: newOpinion.sku || null,\n        };\n\n        const { error } = await supabase.from('opinie').insert([opinionData]);\n\n        if (error) {\n            console.error(\"Error adding opinion: \", error);\n            setStatus({ isLoading: false, error: 'Wystąpił błąd podczas dodawania opinii.' });\n        } else {\n            setStatus({ isLoading: false, error: null });\n            setNewOpinion({ autor: '', komentarz: '', rating: 5, sku: productSku || '' });\n            if (onSubmitSuccess) {\n                onSubmitSuccess();\n            }\n        }\n    };\n\n    return (\n        <div className=\"card mb-4\">\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">Dodaj swoją opinię</h5>\n                {productName && <p className=\"text-muted\">Oceniasz produkt: <strong>{productName}</strong></p>}\n                <form onSubmit={handleSubmit}>\n                    {!productSku && (\n                        <div className=\"mb-3\">\n                            <label htmlFor=\"sku\" className=\"form-label\">SKU Produktu (opcjonalnie)</label>\n                            <input type=\"text\" className=\"form-control\" id=\"sku\" name=\"sku\" value={newOpinion.sku} onChange={handleChange} />\n                        </div>\n                    )}\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"author\" className=\"form-label\">Twoje imię</label>\n                        <input type=\"text\" className=\"form-control\" id=\"author\" name=\"autor\" value={newOpinion.autor} onChange={handleChange} required />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"text\" className=\"form-label\">Treść opinii</label>\n                        <textarea className=\"form-control\" id=\"text\" name=\"komentarz\" rows=\"3\" value={newOpinion.komentarz} onChange={handleChange} required></textarea>\n                    </div>\n                    <div className=\"mb-3\">\n                        <label className=\"form-label\">Ocena:</label>\n                        <EditableStarRating\n                            rating={newOpinion.rating}\n                            onRatingChange={(newRating) => setNewOpinion(prev => ({ ...prev, rating: newRating }))}\n                        />\n                    </div>\n                    \n                    <button type=\"submit\" className=\"btn btn-primary mt-3\" disabled={status.isLoading}>\n                        {status.isLoading ? 'Dodawanie...' : 'Dodaj Opinię'}\n                    </button>\n                    {status.error && <p className=\"text-danger mt-2\">{status.error}</p>}\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default AddOpinionForm;\n","import React from 'react';\n\nconst StarRating = ({ rating }) => {\n    const numericRating = Number(rating) || 0;\n    const stars = [];\n    for (let i = 1; i <= 5; i++) {\n        if (i <= numericRating) {\n            stars.push(<span key={i} className=\"text-warning\">★</span>); // Filled star\n        } else {\n            stars.push(<span key={i} className=\"text-muted\">☆</span>); // Empty star\n        }\n    }\n    return <div>{stars}</div>;\n};\n\nexport default StarRating;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { supabase } from '../supabase';\nimport StarRating from '../components/StarRating';\nimport AddOpinionForm from '../components/AddOpinionForm';\nimport { Helmet } from 'react-helmet-async';\n\n// --- Helper Functions ---\nconst getPriceValue = (priceString) => {\n    if (!priceString) return 0;\n    const price = parseFloat(String(priceString).replace(',', '.').replace(' zł', ''));\n    return isNaN(price) ? 0 : price;\n};\n\nconst formatPriceDisplay = (priceValue) => {\n    if (priceValue === null || priceValue === undefined) return '';\n    const num = parseFloat(priceValue);\n    if (isNaN(num)) return priceValue; // Return original if not a number\n\n    if (num % 1 === 0) { // If it's a whole number\n        return `${num} zł`;\n    } else {\n        return `${num.toFixed(2).replace('.', ',')} zł`; // Format to 2 decimal places, use comma\n    }\n};\n\nconst getLowestPrice = (product) => {\n    if (!product || !product.heightOptions || product.heightOptions.length === 0) return 0;\n    const prices = product.heightOptions.map(opt => getPriceValue(opt.promoPrice || opt.price));\n    return Math.min(...prices);\n};\n\nconst hasPromotion = (product) => {\n    if (!product || !product.heightOptions) return false;\n    return product.heightOptions.some(opt => opt.promoPrice);\n};\n\nconst colorMap = {\n    \"Biały\": \"#FFFFFF\",\n    \"Zielony\": \"#28a745\",\n    \"Żółty\": \"#ffc107\",\n    \"Czarny\": \"#000000\",\n    \"Szary\": \"#6c757d\",\n    \"Jasny brąz\": \"#D2B48C\",\n    \"Niebieski\": \"#007bff\",\n    \"Czerwony\": \"#dc3545\",\n    \"Jasny Brąz\": \"#D2B48C\", // Alias for consistency\n};\n\nconst shuffleArray = (array) => {\n    let currentIndex = array.length, randomIndex;\n    while (currentIndex !== 0) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n        [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n};\n\nconst ProductDetail = () => {\n    const { id } = useParams();\n    const [productsData, setProductsData] = useState([]);\n    const product = productsData.find(p => p.id === id);\n\n    const [mainImage, setMainImage] = useState('');\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [reviews, setReviews] = useState([]);\n    const [reviewsLoading, setReviewsLoading] = useState(true);\n    const [showReviewForm, setShowReviewForm] = useState(false);\n    const [modalProduct, setModalProduct] = useState(null); // State for quick view modal\n\n    const fetchProducts = useCallback(async () => {\n        try {\n            const response = await fetch('/products.json');\n            const data = await response.json();\n            setProductsData(data);\n        } catch (error) {\n            console.error('Error fetching products:', error);\n        }\n    }, []);\n\n    const fetchReviews = useCallback(async () => {\n        if (!product) return;\n        setReviewsLoading(true);\n        const { data, error } = await supabase.from('opinie').select('*').eq('product_sku', product.sku);\n        if (error) {\n            console.error('Error fetching reviews:', error);\n        } else {\n            setReviews(data);\n        }\n        setReviewsLoading(false);\n    }, [product]);\n\n    useEffect(() => {\n        fetchProducts();\n    }, [fetchProducts]);\n\n    useEffect(() => {\n        if (product) {\n            setMainImage(product.mainImage);\n            if (product.heightOptions && product.heightOptions.length > 0) {\n                setSelectedOption(product.heightOptions[0]);\n            }\n            fetchReviews();\n        }\n    }, [id, product, fetchReviews]);\n\n    const handleReviewSubmitSuccess = () => {\n        setShowReviewForm(false);\n        fetchReviews();\n    };\n\n    if (!product) {\n        return <div className=\"container mt-5 pt-5 text-center\"><h2>Produkt nie znaleziony</h2></div>;\n    }\n\n    const recommendedProducts = shuffleArray(\n        productsData.filter(p => p.category === product.category && p.id !== product.id)\n    ).slice(0, 3);\n\n    return (\n        <>\n            <Helmet>\n                <title>{product.name} | Rex3D</title>\n                <meta name=\"description\" content={product.description} />\n                <meta property=\"og:title\" content={product.name} />\n                <meta property=\"og:description\" content={product.description} />\n                <meta property=\"og:image\" content={`${process.env.PUBLIC_URL}${product.mainImage}`} />\n                <meta property=\"og:url\" content={window.location.href} />\n            </Helmet>\n\n            <div className=\"container mt-5 pt-5\">\n                <div className=\"row\">\n                    {/* Left Column: Image and Gallery */}\n                    <div className=\"col-lg-7\">\n                        <img src={`${process.env.PUBLIC_URL}${mainImage}`} className=\"img-fluid w-100 mb-3 rounded sticky-top\" style={{top: '100px'}} alt={`Główne zdjęcie ${product.name}`} />\n                        {product.gallery && product.gallery.length > 1 && (\n                            <div className=\"row g-2\">\n                                {product.gallery.map((img, index) => (\n                                    <div key={index} className=\"col-2\">\n                                        <img \n                                            src={`${process.env.PUBLIC_URL}${img}`} \n                                            className={`img-fluid product-detail-gallery-thumbnail ${mainImage === img ? 'active' : ''}`} \n                                            alt={`${product.name} - zdjęcie ${index + 1}`} \n                                            onClick={() => setMainImage(img)}\n                                        />\n                                    </div>\n                                ))}\n                            </div>\n                        )}\n                    </div>\n\n                    {/* Right Column: Details */}\n                    <div className=\"col-lg-5\">\n                        <h1 className=\"display-5 fw-bold\">{product.name}</h1>\n                        \n                        <div className=\"fs-2 fw-bolder mb-2\">\n                            {selectedOption?.promoPrice ? (\n                                <>\n                                    <s className=\"text-muted me-2 fs-4\">{formatPriceDisplay(selectedOption.price)}</s>\n                                    <span>{formatPriceDisplay(selectedOption.promoPrice)}</span>\n                                </>\n                            ) : (\n                                <span>{formatPriceDisplay(selectedOption?.price)}</span>\n                            )}\n                        </div>\n\n                        <div className=\"mb-4\">\n                            <span className=\"badge bg-light text-dark fs-6\">SKU: {product.sku}</span>\n                        </div>\n\n                        {product.heightOptions && product.heightOptions.length > 0 && (\n                            <>\n                                <h5 className=\"mt-4\">Wybierz opcję:</h5>\n                                <div className=\"btn-group flex-wrap mb-4\" role=\"group\">\n                                    {product.heightOptions.map(option => (\n                                        <button \n                                            key={option.label} \n                                            type=\"button\" \n                                            className={`btn product-detail-option-btn ${selectedOption?.label === option.label ? 'active' : ''}`}\n                                            onClick={() => setSelectedOption(option)}\n                                        >\n                                            {option.label}\n                                        </button>\n                                    ))}\n                                </div>\n                            </>\n                        )}\n\n                        {product.colorOptions && product.colorOptions.length > 0 && (\n                            <>\n                                <h5 className=\"mt-4\">Dostępne kolory:</h5>\n                                <div className=\"d-flex flex-wrap mb-4\">\n                                    {product.colorOptions.map(color => (\n                                        <span \n                                            key={color} \n                                            className=\"color-swatch-detail me-2 mb-2\"\n                                            style={{ backgroundColor: colorMap[color] || '#ccc' }} \n                                            title={color}\n                                        ></span>\n                                    ))}\n                                </div>\n                            </>\n                        )}\n\n                        <div className=\"accordion accordion-flush mt-4\" id=\"productDetailsAccordion\">\n                            <div className=\"accordion-item\">\n                                <h2 className=\"accordion-header\" id=\"headingDesc\">\n                                    <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseDesc\" aria-expanded=\"true\" aria-controls=\"collapseDesc\">\n                                        Opis\n                                    </button>\n                                </h2>\n                                <div id=\"collapseDesc\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingDesc\" data-bs-parent=\"#productDetailsAccordion\">\n                                    <div className=\"accordion-body\">\n                                        {product.description}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"accordion-item\">\n                                <h2 className=\"accordion-header\" id=\"headingDetails\">\n                                    <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseDetails\" aria-expanded=\"false\" aria-controls=\"collapseDetails\">\n                                        Dodatkowe informacje\n                                    </button>\n                                </h2>\n                                <div id=\"collapseDetails\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingDetails\" data-bs-parent=\"#productDetailsAccordion\">\n                                    <div className=\"accordion-body\">\n                                        {/* Add more details here if available in JSON */}\n                                        <p>Kategoria: {product.category}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Reviews Section */}\n            <section className=\"py-5 bg-light\">\n                <div className=\"container\">\n                    <h2 className=\"section-title\">Opinie o produkcie</h2>\n                    {reviewsLoading ? (\n                        <p className=\"text-center\">Ładowanie opinii...</p>\n                    ) : reviews.length > 0 ? (\n                        <div className=\"row\">\n                            {reviews.slice(0, 4).map(review => (\n                                <div key={review.id} className=\"col-md-6 mb-4\">\n                                    <div className=\"card h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"d-flex justify-content-between\">\n                                                <h5 className=\"card-title\">{review.autor}</h5>\n                                                <StarRating rating={review.rating} />\n                                            </div>\n                                            <p className=\"card-text\">{review.komentarz}</p>\n                                            <small className=\"text-muted\">{new Date(review.created_at).toLocaleDateString()}</small>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    ) : (\n                        <p className=\"text-center text-muted\">Brak opinii dla tego produktu.</p>\n                    )}\n                    <div className=\"text-center mt-4\">\n                        {!showReviewForm ? (\n                            <button className=\"btn btn-primary\" onClick={() => setShowReviewForm(true)}>\n                                Napisz opinię\n                            </button>\n                        ) : (\n                            <div className=\"mt-4 p-4 border rounded bg-white\">\n                                <AddOpinionForm \n                                    productSku={product.sku}\n                                    productName={product.name}\n                                    onSubmitSuccess={handleReviewSubmitSuccess}\n                                />\n                                <button className=\"btn btn-sm btn-outline-secondary mt-2\" onClick={() => setShowReviewForm(false)}>Anuluj</button>\n                            </div>\n                        )}\n                         <Link to=\"/opinie\" className=\"btn btn-outline-secondary ms-2\">Zobacz wszystkie opinie</Link>\n                    </div>\n                </div>\n            </section>\n\n            {/* Recommended Products Section */}\n            {recommendedProducts.length > 0 && (\n                <section className=\"py-5\">\n                    <div className=\"container\">\n                        <h2 className=\"section-title\">Polecane produkty</h2>\n                        <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3\">\n                            {recommendedProducts.map(recProduct => {\n                                const lowestPrice = getLowestPrice(recProduct);\n                                const isPromo = hasPromotion(recProduct);\n                                return (\n                                    <div key={recProduct.id} className=\"col\">\n                                        <div className=\"card h-100\">\n                                            <div className=\"position-relative\" style={{ overflow: 'hidden' }}>\n                                                <img src={`${process.env.PUBLIC_URL}${recProduct.mainImage}`} className=\"card-img-top product-card-img\" alt={recProduct.name} />\n                                                <div className=\"position-absolute top-0 start-0 p-2\">\n                                                    {recProduct.isNew && <span className=\"badge bg-success me-1\">NOWOŚĆ</span>}\n                                                    {isPromo && <span className=\"badge bg-danger me-1\">PROMOCJA</span>}\n                                                    {recProduct.isBestseller && <span className=\"badge bg-warning text-dark\">BESTSELLER</span>}\n                                                </div>\n                                            </div>\n                                            <div className=\"card-body text-center\">\n                                                <h5 className=\"card-title text-dark\">{recProduct.name}</h5>\n                                                <p className=\"card-text text-muted fw-bold\">od {formatPriceDisplay(lowestPrice)} PLN</p>\n                                            </div>\n                                            <div className=\"card-footer bg-transparent border-top-0 pb-3 text-center\">\n                                                <button onClick={() => setModalProduct(recProduct)} className=\"btn btn-sm btn-outline-secondary me-2\">Szybki podgląd</button>\n                                                <Link to={`/products/${recProduct.id}`} className=\"btn btn-sm btn-primary\">Zobacz szczegóły</Link>\n                                            </div>\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </section>\n            )}\n\n            {/* Modal for Recommended Product Quick View */}\n            {modalProduct && (\n                <>\n                    <div className=\"modal fade show\" style={{ display: 'block' }} tabIndex=\"-1\">\n                        <div className=\"modal-dialog modal-lg modal-dialog-centered\">\n                            <div className=\"modal-content\">\n                                <div className=\"modal-header\">\n                                    <h5 className=\"modal-title\">{modalProduct.name}</h5>\n                                    <button type=\"button\" className=\"btn-close\" onClick={() => setModalProduct(null)}></button>\n                                </div>\n                                <div className=\"modal-body\">\n                                    <div className=\"row\">\n                                        <div className=\"col-md-6\">\n                                            <div className=\"position-relative\">\n                                                <img src={`${process.env.PUBLIC_URL}${modalProduct.mainImage}`} className=\"img-fluid rounded\" alt={modalProduct.name} />\n                                                <div className=\"position-absolute top-0 start-0 p-2\">\n                                                    {modalProduct.isNew && <span className=\"badge bg-success me-1\">NOWOŚĆ</span>}\n                                                    {hasPromotion(modalProduct) && <span className=\"badge bg-danger me-1\">PROMOCJA</span>}\n                                                    {modalProduct.isBestseller && <span className=\"badge bg-warning text-dark\">BESTSELLER</span>}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <p>{modalProduct.description}</p>\n                                            <h6>Opcje:</h6>\n                                            <ul>{modalProduct.heightOptions.map(opt => <li key={opt.label}>{opt.label} - <strong>{opt.promoPrice ? <><s className=\"text-muted me-2\">{formatPriceDisplay(opt.price)}</s><span className=\"text-danger\">{formatPriceDisplay(opt.promoPrice)}</span></> : formatPriceDisplay(opt.price)}</strong></li>)}</ul>\n                                            <h6>Dostępne kolory:</h6>\n                                            <div className=\"d-flex flex-wrap mb-4\">\n                                                {modalProduct.colorOptions.map(color => (\n                                                    <span \n                                                        key={color} \n                                                        className=\"color-swatch-detail me-2 mb-2\"\n                                                        style={{ backgroundColor: colorMap[color] || '#ccc' }} \n                                                        title={color}\n                                                    ></span>\n                                                ))}\n                                            </div>\n                                            <Link to={`/products/${modalProduct.id}`} className=\"btn btn-primary mt-3\">Idź do strony produktu</Link>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"modal-backdrop fade show\" onClick={() => setModalProduct(null)}></div>\n                </>\n            )}\n        </>\n    );\n};\n\nexport default ProductDetail;\n"],"names":["EditableStarRating","_ref","rating","onRatingChange","hoverRating","setHoverRating","useState","stars","Array","from","length","_","i","_jsx","children","map","starIndex","className","style","cursor","color","onClick","onMouseEnter","onMouseLeave","_ref2","productSku","productName","onSubmitSuccess","newOpinion","setNewOpinion","autor","komentarz","sku","status","setStatus","isLoading","error","handleChange","e","name","value","target","prevState","_objectSpread","_jsxs","onSubmit","async","preventDefault","opinionData","parseInt","product_sku","supabase","insert","console","htmlFor","type","id","onChange","required","rows","newRating","prev","disabled","numericRating","Number","push","formatPriceDisplay","priceValue","undefined","num","parseFloat","isNaN","concat","toFixed","replace","getLowestPrice","product","heightOptions","prices","opt","priceString","price","String","getPriceValue","promoPrice","Math","min","hasPromotion","some","colorMap","ProductDetail","useParams","productsData","setProductsData","find","p","mainImage","setMainImage","selectedOption","setSelectedOption","reviews","setReviews","reviewsLoading","setReviewsLoading","showReviewForm","setShowReviewForm","modalProduct","setModalProduct","fetchProducts","useCallback","response","fetch","data","json","fetchReviews","select","eq","useEffect","recommendedProducts","array","randomIndex","currentIndex","floor","random","shuffleArray","filter","category","slice","_Fragment","Helmet","content","description","property","process","window","location","href","src","top","alt","gallery","img","index","role","option","label","colorOptions","backgroundColor","title","review","StarRating","Date","created_at","toLocaleDateString","AddOpinionForm","handleReviewSubmitSuccess","Link","to","recProduct","lowestPrice","isPromo","overflow","isNew","isBestseller","display","tabIndex"],"sourceRoot":""}